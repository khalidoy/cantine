name: Django CI/CD

on:
  push:
    branches: [main]

env:
  AWS_REGION: eu-north-1 # Changed to Stockholm
  EB_APP_NAME: CantineApp
  EB_ENV_NAME: CantineApp-env

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create Elastic Beanstalk Application (if needed)
        run: |
          # Check if application exists
          APP_EXISTS=$(aws elasticbeanstalk describe-applications \
            --application-name "${{ env.EB_APP_NAME }}" \
            --region "${{ env.AWS_REGION }}" \
            --query 'Applications[0].ApplicationName' \
            --output text 2>/dev/null || echo "false")

          if [ "$APP_EXISTS" = "false" ]; then
            echo "Creating new application..."
            aws elasticbeanstalk create-application \
              --application-name "${{ env.EB_APP_NAME }}" \
              --region "${{ env.AWS_REGION }}"
          else
            echo "Application already exists."
          fi

      - name: Create deployment package
        run: |
          zip -r deploy-package.zip . \
            -x "*.git*" "*.github*" "*.env*" "*.DS_Store*"

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APP_NAME }}
          environment_name: ${{ env.EB_ENV_NAME }}
          version_label: "v1.0-${{ github.sha }}"
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy-package.zip
          environment_type: LoadBalanced # Add this for web servers
          solution_stack_name: "64bit Amazon Linux 2023 v4.1.1 running Docker" # Critical for Docker
          wait_for_environment_recovery: 1800
          use_existing_version_if_available: false # Force fresh deploy
          instance_profile_name: aws-elasticbeanstalk-ec2-role # Ensure this matches your IAM role
